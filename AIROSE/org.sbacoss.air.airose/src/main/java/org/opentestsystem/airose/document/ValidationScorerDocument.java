/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.document;

import java.util.ArrayList;
import java.util.List;

import org.opentestsystem.airose.common.abstractdocument.AbstractDocProcessors;
import org.opentestsystem.airose.common.abstractdocument.AbstractDocTokenizers;
import org.opentestsystem.airose.common.abstractdocument.AbstractDocument;
import org.opentestsystem.airose.common.abstractdocument.AbstractTermWeightsProcessor;
import org.opentestsystem.airose.common.config.UninitializedException;
import org.opentestsystem.airose.docprocessors.AbbreviationsDetectionDocProcessor;
import org.opentestsystem.airose.docprocessors.ConventionsQualityDocProcessor;
import org.opentestsystem.airose.docprocessors.LanguageToolDocProcessor;
import org.opentestsystem.airose.docprocessors.OpenNLPParserDocProcessor;
import org.opentestsystem.airose.docprocessors.ProperPunctuationDocProcessor;
import org.opentestsystem.airose.docprocessors.ScoreTokenizerDocProcessor;
import org.opentestsystem.airose.docprocessors.SentenceDetectorDocProcessor;
import org.opentestsystem.airose.doctokenizers.POSTokenizer;
import org.opentestsystem.airose.doctokenizers.RemoveSpecialCharactersTokenizer;
import org.opentestsystem.airose.doctokenizers.WordNetBaseWordsTokenizer;
import org.opentestsystem.airose.termweights.TermWeightsFactory;

public class ValidationScorerDocument extends AbstractDocument
{
  public ValidationScorerDocument (String fileName, String response, double score, String essayId) {
    super (fileName, response, score, essayId);
  }

  @Override
  protected List<AbstractDocProcessors> getListOfDocumentPreprocessors () {
    return null;
  }

  /*
   * create of list of document processors for this document. in the future this
   * should be configurable from the configuration file.
   */
  protected List<AbstractDocProcessors> getListOfDocumentProcessors () {
    List<AbstractDocProcessors> listOfDocProcessors = new ArrayList<AbstractDocProcessors> ();
    listOfDocProcessors.add (new ScoreTokenizerDocProcessor (this));
    listOfDocProcessors.add (new AbbreviationsDetectionDocProcessor (this));
    listOfDocProcessors.add (new ProperPunctuationDocProcessor (this));
    listOfDocProcessors.add (new LanguageToolDocProcessor (this));
    listOfDocProcessors.add (new SentenceDetectorDocProcessor (this));
    listOfDocProcessors.add (new OpenNLPParserDocProcessor (this));
    listOfDocProcessors.add (new ConventionsQualityDocProcessor (this));
    return listOfDocProcessors;
  }

  protected List<AbstractDocTokenizers> getListOfDocumentTokenizers () {
    List<AbstractDocTokenizers> listOfDocTokenizers = new ArrayList<AbstractDocTokenizers> ();
    listOfDocTokenizers.add (new POSTokenizer (this));
    listOfDocTokenizers.add (new RemoveSpecialCharactersTokenizer (this));
    listOfDocTokenizers.add (new WordNetBaseWordsTokenizer (this));
    return listOfDocTokenizers;
  }

  protected AbstractTermWeightsProcessor getTermWeightsProcessor () throws UninitializedException {
    return TermWeightsFactory.getTermWeightsAssignmetInstance (this);
  }

}
