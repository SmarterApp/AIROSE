/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.db.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity
@Table (name = "MatrixEntry")
public class MatrixEntry
{

  private long   mId           = (long) -1;

  /*
   * row-column. zero-based index.
   */
  private int    mRowNumber    = 0;
  private int    mColumnNumber = 0;

  /*
   * entry.
   */
  private double mEntry        = 0;

  /*
   * the foreign key of the matrix. todo: this needs to be replaced with proper
   * annotations in the future.
   */
  private Long   mMatrxId      = (long) -1;

  /*
   * to be used only by hibernate.
   */
  public MatrixEntry () {
  }

  public MatrixEntry (int row, int column, double entry, long matrixForeignKey) {
    this.mRowNumber = row;
    this.mColumnNumber = column;
    this.mEntry = entry;
    this.mMatrxId = matrixForeignKey;
  }

  @Id
  @GeneratedValue (generator = "increment")
  @GenericGenerator (name = "increment", strategy = "increment")
  public long getId () {
    return mId;
  }

  @SuppressWarnings ("unused")
  private void setId (long id) {
    mId = id;
  }

  @Column (name = "rowNumber")
  public int getRowNumber () {
    return mRowNumber;
  }

  public void setRowNumber (int row) {
    mRowNumber = row;
  }

  @Column (name = "columnNumber")
  public int getColumnNumber () {
    return mColumnNumber;
  }

  public void setColumnNumber (int column) {
    mColumnNumber = column;
  }

  @Column (name = "entry")
  public double getEntry () {
    return mEntry;
  }

  public void setEntry (double entry) {
    mEntry = entry;
  }

  @Column (name = "matrixId")
  public Long getMatrixId () {
    return mMatrxId;
  }

  public void setMatrixId (Long matrixForeignKey) {
    mMatrxId = matrixForeignKey;
  }

  final static String FORMATTED_STRING = "(Matrix: %d, Row: %d, Column: %d, Entry: %f)";

  public String toString () {
    return String.format (FORMATTED_STRING, getMatrixId (), getRowNumber (), getColumnNumber (), getEntry ());
  }
}
