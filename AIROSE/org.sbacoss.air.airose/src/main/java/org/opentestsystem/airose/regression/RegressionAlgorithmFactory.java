/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.regression;

import org.opentestsystem.airose.common.config.UninitializedException;
import org.opentestsystem.airose.db.accessors.ModelEntryAccessor;
import org.opentestsystem.airose.db.entities.EnumRegressionModel;
import org.opentestsystem.airose.db.entities.Model;
import org.opentestsystem.airose.db.session.SessionException;
import org.opentestsystem.airose.regression.ols.OLSModel;
import org.opentestsystem.airose.regression.ols.OLSRegressionModeller;
import org.opentestsystem.airose.regression.orderedprobit.OrderedProbitModel;
import org.opentestsystem.airose.regression.orderedprobit.OrderedProbitModeller;

public class RegressionAlgorithmFactory
{
  public static AbstractRegressionAlgorithm getRegressionAlgorithm (EnumRegressionModel modelToUse) throws UninitializedException {
    if (modelToUse == EnumRegressionModel.OLS) {
      return new OLSRegressionModeller ();
    } else if (modelToUse == EnumRegressionModel.PROBIT) {
      return new OrderedProbitModeller ();
    }
    return null;
  }

  public static AbstractModel loadModel (Model md, ModelEntryAccessor dbAccessor, int totalRegressorsUsed) throws UninitializedException, ModelLoadingException, SessionException {
    AbstractModel returnValue = null;
    if (md.getRegressionModelType () == EnumRegressionModel.OLS.ordinal ()) {
      returnValue = new OLSModel ();
    } else if (md.getRegressionModelType () == EnumRegressionModel.PROBIT.ordinal ()) {
      returnValue = new OrderedProbitModel ();
    }
    returnValue.loadFromDatabase (md, dbAccessor, totalRegressorsUsed);
    return returnValue;
  }
}
