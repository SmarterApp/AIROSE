/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.common.config;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

public abstract class AbstractConfiguration
{

  protected String     mConfigurationFilename = null;
  protected Properties mProperties            = null;

  public String getExplicitDBShutdownURL () throws UninitializedException {
    checkIfInitialized ();
    return mProperties.getProperty ("org.air.org.essayscorer.db.explicitShutdownURL", null);
  }

  public String getDBURL () throws UninitializedException {
    checkIfInitialized ();
    return mProperties.getProperty ("org.air.org.essayscorer.db.url", null);
  }

  public boolean isMultiThreaded () throws UninitializedException {
    checkIfInitialized ();
    return Boolean.parseBoolean (mProperties.getProperty ("org.air.essayscorer.config.multithreaded"));
  }

  public String getOpenNLPDataPath () throws UninitializedException {
    checkIfInitialized ();
    return mProperties.getProperty ("org.air.org.essayscorer.opennlp.datapath");
  }

  public String getWordNetDataPath () throws UninitializedException {
    checkIfInitialized ();
    return mProperties.getProperty ("wordnet.database.dir");
  }

  public String getTermWeightsAssignmentType () throws UninitializedException {
    checkIfInitialized ();
    return mProperties.getProperty ("org.air.essayscorer.config.termWeights");
  }

  protected boolean checkIfInitialized () throws UninitializedException {
    if (mProperties != null)
      return true;
    else
      throw new UninitializedException (getUnInitializedMessage ());
  }

  protected abstract String getUnInitializedMessage ();

  protected AbstractConfiguration (String fileName) throws IOException {
    this.mConfigurationFilename = fileName;
    init ();
  }

  private void init () throws IOException {
    FileInputStream fis = new FileInputStream (this.mConfigurationFilename);
    mProperties = new Properties ();
    mProperties.load (fis);
    fis.close ();
  }

}
