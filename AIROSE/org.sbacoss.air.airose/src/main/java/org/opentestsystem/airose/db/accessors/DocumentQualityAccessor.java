/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.db.accessors;

import java.util.Iterator;
import java.util.List;

import org.hibernate.Query;
import org.opentestsystem.airose.db.entities.DocumentQuality;
import org.opentestsystem.airose.db.entities.Model;
import org.opentestsystem.airose.db.session.DBSession;
import org.opentestsystem.airose.db.session.SessionException;

public class DocumentQualityAccessor extends AbstractAccessor
{
  public DocumentQualityAccessor (DBSession session) {
    super (session);
  }

  public void saveDocumentQualityList (Iterator<DocumentQuality> docQualityListIterator, Model md) throws SessionException {
    if (docQualityListIterator != null) {
      beginTransaction ();
      while (docQualityListIterator.hasNext ()) {
        DocumentQuality qualityAttribute = docQualityListIterator.next ();
        qualityAttribute.setModelId (md.getId ());
        saveOrUpdateObject (qualityAttribute);
      }
      commitTransaction ();
    }
  }

  /*
   * get list of document quality fake terms and dimensions that have been used
   * for those document quality factors.
   */
  public List<DocumentQuality> getListOfDocumentQualitiesInModel (Model md) throws SessionException {
    Query query = createQuery ("select l from DocumentQuality as l where l.modelId =  :modelId order by l.dimension asc");
    query.setLong ("modelId", md.getId ());
    @SuppressWarnings ("unchecked")
    List<DocumentQuality> listOfQualityFactors = query.list ();
    return listOfQualityFactors;
  }
}
