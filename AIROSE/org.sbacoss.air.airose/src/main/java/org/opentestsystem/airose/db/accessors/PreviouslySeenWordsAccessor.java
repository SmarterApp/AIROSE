/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.db.accessors;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.hibernate.Query;
import org.opentestsystem.airose.db.entities.Model;
import org.opentestsystem.airose.db.entities.PreviouslySeenWords;
import org.opentestsystem.airose.db.session.DBSession;
import org.opentestsystem.airose.db.session.SessionException;

public class PreviouslySeenWordsAccessor extends AbstractAccessor
{
  public PreviouslySeenWordsAccessor (DBSession session) {
    super (session);
  }

  public List<String> getPreviouslySeenWords (Model md) throws SessionException {
    Query query = createQuery ("select l from PreviouslySeenWords as l where l.modelId =  :modelId");
    query.setLong ("modelId", md.getId ());
    @SuppressWarnings ("unchecked")
    List<PreviouslySeenWords> listOfTerms = query.list ();
    if (listOfTerms != null) {
      List<String> listOfStrings = new ArrayList<String> ();
      for (PreviouslySeenWords word : listOfTerms)
        listOfStrings.add (word.getTerm ());
      return listOfStrings;
    } else
      return null;
  }

  public void saveToDB (Model md, Iterator<String> wordsList) throws SessionException {
    beginTransaction ();
    while (wordsList.hasNext ()) {
      PreviouslySeenWords wp = new PreviouslySeenWords (md.getId (), wordsList.next ());
      saveOrUpdateObject (wp);
    }
    commitTransaction ();
  }
}
