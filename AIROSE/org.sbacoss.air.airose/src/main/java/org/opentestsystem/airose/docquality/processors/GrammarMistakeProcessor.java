/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.docquality.processors;

import org.opentestsystem.airose.common.abstractdocument.AbstractDocument;
import org.opentestsystem.airose.db.entities.DocumentQuality;
import org.opentestsystem.airose.docquality.EnumDocumentQualityAttributes;
import org.opentestsystem.airose.languagetool.Mistake;
import org.opentestsystem.airose.languagetool.RuleMatchTypeEnum;

public class GrammarMistakeProcessor extends AbstractDocumentQualityProcessor
{
  private String mMistakeSubType = null;

  public GrammarMistakeProcessor (DocumentQuality quality) {
    super (quality);
    mMistakeSubType = quality.getSubTerm ();
  }

  public double assignQualityWeight (AbstractDocument doc) {
    int countOfMistakes = 0;
    if (doc.getMistakes ().getListOfMistakes () != null) {
      for (Mistake mistake : doc.getMistakes ().getListOfMistakes ()) {
        if (mistake.getMistakeType () == RuleMatchTypeEnum.GRAMMAR_MISTAKE && mMistakeSubType.equals (mistake.getMistakeTypeSubCategory ())) {
          ++countOfMistakes;
          // note down every mistake in the log.
          StringBuilder strnBuilder = new StringBuilder ();
          strnBuilder.append ("doc id: " + doc.getDocId () + ";");
          strnBuilder.append (mistake.toString () + "\n");
          printToOutputFile (strnBuilder.toString ());
        }
      }
    }
    return countOfMistakes;
  }

  public EnumDocumentQualityAttributes getDocumentQualityAttributeType () {
    return EnumDocumentQualityAttributes.GRAMMAR;
  }
}
