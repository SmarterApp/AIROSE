/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.db.accessors;

import java.util.Iterator;
import java.util.List;

import org.hibernate.Query;
import org.opentestsystem.airose.db.entities.Model;
import org.opentestsystem.airose.db.entities.TermIndex;
import org.opentestsystem.airose.db.session.DBSession;
import org.opentestsystem.airose.db.session.SessionException;
import org.opentestsystem.airose.sspace.TermDimensionMap;

public class TermAccessor extends AbstractAccessor
{
  public TermAccessor (DBSession session) {
    super (session);
  }

  public void saveTermIndex (TermDimensionMap mapper, Model md) throws SessionException {
    beginTransaction ();
    Iterator<String> termKeys = mapper.getWords ().iterator ();
    while (termKeys.hasNext ()) {
      String termKey = termKeys.next ();
      int dimension = mapper.getDimension (termKey);
      TermIndex ti = new TermIndex (md.getId (), termKey, dimension);
      saveOrUpdateObject (ti);
    }
    commitTransaction ();
  }

  /*
   * gets the list of TermIndex objects associated with this model. the returned
   * list is sorted in ascending order by the dimension. todo: make sure that
   * hibernate is not setting a default fetch list size for the result set.
   */
  public List<TermIndex> getListOfTermsInModel (Model md) throws SessionException {
    Query query = createQuery ("select l from TermIndex as l where l.modelId =  :modelId order by l.dimension asc");
    query.setLong ("modelId", md.getId ());
    @SuppressWarnings ("unchecked")
    List<TermIndex> listOfTerms = query.list ();
    return listOfTerms;
  }
}
