/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.docquality.processors;

import java.io.PrintWriter;

import org.opentestsystem.airose.common.abstractdocument.*;
import org.opentestsystem.airose.db.entities.*;
import org.opentestsystem.airose.docquality.EnumDocumentQualityAttributes;

public abstract class AbstractDocumentQualityProcessor
{

  private DocumentQuality mDocQuality  = null;
  // todo: move this to log4j.
  // a file to which we can dump everything.
  private PrintWriter     mPrintWriter = null;

  /*
   * @param quality A object of type DocumentQuality which contains dimension
   * and (fake) term information for this quality.
   */
  public AbstractDocumentQualityProcessor (DocumentQuality quality) {
    this.mDocQuality = quality;
  }

  public abstract double assignQualityWeight (AbstractDocument doc);

  public abstract EnumDocumentQualityAttributes getDocumentQualityAttributeType ();

  protected DocumentQuality getDocumentQuality () {
    return mDocQuality;
  }

  // todo: use of PrintWriter here is a hack! we shoule be using log4j instead.
  public void setPrintWriter (PrintWriter prn) {
    this.mPrintWriter = prn;
  }

  public PrintWriter getPrintWriter () {
    return this.mPrintWriter;
  }

  protected void printToOutputFile (String strn) {
    if (mPrintWriter != null) {
      mPrintWriter.print (strn);
    }
  }
}
