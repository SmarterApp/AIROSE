/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.db.entities.test;

/*
 * refactor this for a junit test.
 */
import java.util.List;

import org.hibernate.Query;
import org.hibernate.cfg.Configuration;
import org.opentestsystem.airose.common.config.AbstractConfiguration;
import org.opentestsystem.airose.common.config.ConfigurationFactory;
import org.opentestsystem.airose.common.config.UninitializedException;
import org.opentestsystem.airose.common.config.ConfigurationFactory.ConfigurationType;
import org.opentestsystem.airose.db.entities.EnumRegressionModel;
import org.opentestsystem.airose.db.entities.Model;
import org.opentestsystem.airose.db.session.DBSession;
import org.opentestsystem.airose.db.session.DBSessionFactory;
import org.opentestsystem.airose.db.session.SessionException;

public class DBTest
{

  private static String ConfigurationFile = null;

  private static void setUp () throws Exception {

    ConfigurationFactory.initializeConfiguration (ConfigurationFile, ConfigurationType.TRAINER);

    (new Configuration ()).configure ("hibernate.cfg.xml");

    DBSessionFactory.getInstance ();
  }

  private static void tearDown () {
    DBSessionFactory.getInstance ().shutdownDBConnection ();
  }

  private static void insertDoc () throws SessionException, UninitializedException {
    // create a couple of events...
    DBSession session = DBSessionFactory.getInstance ().getSession (1);
    session.beginTransaction (1);
    session.saveOrUpdateObject (new Model ("x", "y", "z", EnumRegressionModel.OLS, 50));
    session.saveOrUpdateObject (new Model ("m", "n", "o", EnumRegressionModel.OLS, 50));
    session.saveOrUpdateObject (new Model ("k", "e", "p", EnumRegressionModel.OLS, 50));
    session.commitTransaction (1);
    session.closeSession (1);
  }

  private static void query () throws UninitializedException, SessionException {
    // now lets pull events from the database and list them
    DBSession session = DBSessionFactory.getInstance ().getSession (1);
    Query query = session.createQuery ("select m from Model as m where m.modelId =  :modelId");
    query.setString ("modelId", "1");
    @SuppressWarnings ("unchecked")
    List<Model> result = query.list ();
    for (Model m : result) {
      System.out.println ("Model (" + m.getEssayId () + " ; " + m.getId () + ") : " + m.getModelId ());
    }
    session.closeSession (1);
  }

  /*
   * followed:
   * http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session
   * -configuration.html
   */
  public static void main (String[] agrs) {
    DBTest.ConfigurationFile = "C:/EssayScoringEngine/EssayScorer/conf/trainer.properties";
    try {
      setUp ();
      /*
       * insertDoc(); insertDoc(); insertDoc(); insertDoc(); insertDoc();
       * insertDoc(); insertDoc();
       */
      query ();

      tearDown ();
      /*
       * setUp(); query(); tearDown();
       */
    } catch (Exception exp) {
      System.err.println (exp.getMessage ());
    }
  }
}
