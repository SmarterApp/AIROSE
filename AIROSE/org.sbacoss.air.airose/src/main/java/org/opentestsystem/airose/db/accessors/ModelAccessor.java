/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.db.accessors;

import java.util.List;

import org.hibernate.Query;
import org.opentestsystem.airose.db.entities.Model;
import org.opentestsystem.airose.db.session.DBSession;
import org.opentestsystem.airose.db.session.SessionException;

/*
 * Accessor class for Model table.
 */
public class ModelAccessor extends AbstractAccessor
{

  public ModelAccessor (DBSession session) {
    super (session);
  }

  /*
   * insert a new object into the table.
   */
  public Model insertNewModel (Model model) throws SessionException {
    beginTransaction ();
    model = (Model) saveOrUpdateObject (model);
    commitTransaction ();
    return model;
  }

  static final String EXCEPTION_MESSAGE = "Unique result was expected for Model Id {0}, Essay Id {1} and Score Type {2} but more than one result was found.";

  /*
   * gets a model by the modelid, essayid and score type.
   */
  public Model getModel (String modelId, String essayId, String scoreType) throws SessionException, UniqueResultException {

    Query query = createQuery ("select m from Model as m where m.modelId =  :modelId and m.essayId = :essayId and m.scoreType = :scoreType");
    query.setString ("modelId", modelId);
    query.setString ("essayId", essayId);
    query.setString ("scoreType", scoreType);
    @SuppressWarnings ("unchecked")
    List<Model> result = query.list ();
    if (result.size () > 1) {
      throw new UniqueResultException (String.format (EXCEPTION_MESSAGE, modelId, essayId, scoreType));
    } else if (result.size () == 1) {
      return result.get (0);
    } else
      return null;

  }

}
