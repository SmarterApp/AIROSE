/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.docprocessors;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import opennlp.tools.parser.Parse;

import org.opentestsystem.airose.common.abstractdocument.AbstractDocProcessors;
import org.opentestsystem.airose.common.abstractdocument.AbstractDocument;
import org.opentestsystem.airose.common.abstractdocument.AbstractResource;
import org.opentestsystem.airose.common.abstractdocument.DocProcessorException;
import org.opentestsystem.airose.opennlp.EssayScorerOpenNLP;

/*
 * Uses OpenNLP to create parse trees. This requires that sentence detector has
 * been run upfront on the doc.
 */
public class OpenNLPParserDocProcessor extends AbstractDocProcessors
{
  public OpenNLPParserDocProcessor (AbstractDocument doc) {
    super (doc);
  }

  public boolean processDocument (HashMap<String, AbstractResource> resourceMap) throws DocProcessorException {
    AbstractDocument doc = getDocument ();
    // get an instance of the OpenNLP parser
    EssayScorerOpenNLP openNLP = EssayScorerOpenNLP.getInstance ();
    // for each sentence create parse trees.
    List<Parse> listOfParses = new ArrayList<Parse> ();
    for (String sentence : doc.getSentences ()) {
      Parse[] parsesForSentence = openNLP.getParses (sentence);
      for (Parse parse : parsesForSentence) {
        // todo: keep the highest probability parse tree.
        listOfParses.add (parse);
      }
    }

    doc.setParse ((Parse[]) listOfParses.toArray (new Parse[listOfParses.size ()]));
    return true;
  }
}
