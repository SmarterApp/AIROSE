/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.regression.orderedprobit.test;

import java.io.*;
import java.util.*;

import org.opentestsystem.airose.regression.orderedprobit.*;

public class OrderedProbitTest extends OrderedProbit
{
  public static double[]   y;
  public static double[][] x;

  public static void main (String argv[]) {

    String inputFileName = "C:/EssayScoringEngine/AIRData/00257351/output/2/257351-probit-1/default/regressionMatrix.csv";
    try {
      // the format will be
      // header line
      // y1, x10, x11, x12,...
      // y2, x20, x21, x22....
      buildInputData (inputFileName);
      System.err.println ("Done reading input file.");
    } catch (IOException exp) {
      System.err.println (exp.toString ());
    }

    try {
      OrderedProbitTest probit = new OrderedProbitTest ();
      probit.EstimateOrderedProbit (y, x);
      System.err.println ("Completed building model.");
    } catch (OrderedProbitException exp) {
      System.err.println (exp.toString ());
    }
  }

  private static void buildInputData (String fileName) throws IOException {
    ArrayList<Double> yVector = new ArrayList<Double> ();
    ArrayList<Double[]> xMatrix = new ArrayList<Double[]> ();
    BufferedReader reader = new BufferedReader (new FileReader (fileName));
    String line = null;
    // first line is header.
    reader.readLine ();
    // now read each line and split into tokens.
    while ((line = reader.readLine ()) != null) {
      line = line.trim ();
      if ("".equals (line))
        continue;
      String[] tokens = line.split (",");

      yVector.add (Double.parseDouble (tokens[0]));

      // now the independent variables.
      ArrayList<Double> xVector = new ArrayList<Double> ();
      for (int counter1 = 1; counter1 < tokens.length; ++counter1) {
        String token = tokens[counter1].trim ();
        if ("".equals (token))
          continue;
        xVector.add (Double.parseDouble (token));
      }
      xMatrix.add (xVector.toArray (new Double[xVector.size ()]));
    }
    reader.close();

    x = new double[xMatrix.size ()][xMatrix.get (0).length];
    for (int counter1 = 0; counter1 < xMatrix.size (); ++counter1) {
      Double[] xTemp = xMatrix.get (counter1);
      for (int counter2 = 0; counter2 < xTemp.length; ++counter2)
        x[counter1][counter2] = xTemp[counter2];
    }

    Double[] yTemp = yVector.toArray (new Double[yVector.size ()]);
    y = new double[yTemp.length];
    for (int counter1 = 0; counter1 < yTemp.length; ++counter1) {
      y[counter1] = yTemp[counter1];
    }
  }
}
