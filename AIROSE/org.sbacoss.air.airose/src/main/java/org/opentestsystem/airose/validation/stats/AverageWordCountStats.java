/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.validation.stats;

import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.List;

import org.opentestsystem.airose.common.abstractdocument.AbstractDocument;
import org.opentestsystem.airose.common.config.ConfigurationFactory;
import org.opentestsystem.airose.regression.AbstractDocumentStats;

public class AverageWordCountStats extends AbstractStatsProcessor
{
  int mTotalDocumentsScanned = 0;
  int mTotalWords            = 0;
  int mLongestResponse       = 0;
  int mShortestResponse      = 0;

  public AverageWordCountStats (String outputFolder) {
    super (outputFolder);
  }

  protected void processDocumentStat (AbstractDocumentStats stat) {
    if (stat == null)
      return;
    AbstractDocument doc = stat.getDocument ();
    ++mTotalDocumentsScanned;
    int wordCountForDoc = doc.getWordCount ();
    mTotalWords = mTotalWords + wordCountForDoc;

    if (wordCountForDoc > mLongestResponse)
      mLongestResponse = wordCountForDoc;
    else if (wordCountForDoc < mShortestResponse)
      mShortestResponse = wordCountForDoc;
  }

  protected void preProcessDocumentStats (@SuppressWarnings ("rawtypes") List stats) {
    // nothing to do.
  }

  protected void postProcessDocumentStats (@SuppressWarnings ("rawtypes") List stats) throws FileNotFoundException {
    String runType = ConfigurationFactory.getConfigurationType ().toString ();
    PrintStream prn = new PrintStream (getOutputFolder () + "/averageWordCount" + runType + ".txt");

    prn.println ("========Word Count (" + runType + ")=========");
    prn.println ("Total documents scanned, " + mTotalDocumentsScanned);
    prn.println ("Minimum response length, " + mShortestResponse);
    prn.println ("Maximum response length, " + mLongestResponse);
    prn.println ("Average response length, " + (mTotalWords / (double) mTotalDocumentsScanned));
    prn.println ("===========================");
    prn.close ();
  }
}
