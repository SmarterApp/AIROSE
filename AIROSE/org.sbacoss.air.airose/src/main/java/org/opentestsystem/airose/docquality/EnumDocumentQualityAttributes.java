/*******************************************************************************
 * Copyright (c) 2013 American Institutes for Research
 * 
 * This file is part of AIROSE.
 * 
 * AIROSE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AIROSE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AIROSE.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package org.opentestsystem.airose.docquality;

import org.opentestsystem.airose.languagetool.RuleMatchTypeEnum;

/*
 * enum for additional parameters to be thrown into the regression modeller.
 */
public enum EnumDocumentQualityAttributes {

  UNIQUE_WORD_NUMBERS("UNIQUEWORDS", true), PARAGRAPHS("PARAGRAPHS", true), VERB_QUALITY("VERB QUALITY", true), MISSPELLINGS("NUMBER OF MISSPELLINGS", false), GRAMMAR("NUMBER OF GRAMMAR MISTAKES",
      false), RATIO_OF_UNIQUE_WORDS_TO_TOTAL_WORDS("RATIO_OF_UNIQUE_WORDS_TO_TOTAL_WORDS", true), PARAGRAPH_COUNT("PARAGRAPH_COUNT", true), RAW_WORD_COUNT("RAW_WORD_COUNT", true), PERCENTAGE_MISSPELLINGS(
      "PERCENTAGE_MISSPELLINGS", true), AVERAGE_WORD_LENGTH("AVERAGE_WORD_LENGTH", true), AVERAGE_PARAGRAPH_LENGTH("AVERAGE_PARAGRAPH_LENGTH", true), PASSIVE_SENTENCES_PROPORTION(
      "PASSIVE_SENTENCES_PROPORTION", true), OVERALL_PUNCTUATION_SCORE("OVERALL_PUNCTUATION_SCORE", true), OVERALL_SYNTAX_SCORE("OVERALL_SYNTAX_SCORE", true), AVERAGE_MINIMUM_SYNTAX_SCORE(
      "AVERAGE_MINIMUM_SYNTAX_SCORE", true), NUMBER_OF_NOMINALS("NUMBER_OF_NOMINALS", true), NUMBER_OF_LONG_NOMINALS("NUMBER_OF_LONG_NOMINALS", true), VERB_DIVERSITY("VERB_DIVERSITY", true), SENTENCE_COUNT(
      "SENTENCE_COUNT", true);

  private String  mTerm          = null;
  // during training should we automatically add this to the list of document
  // quality attributes?
  private boolean mAddStatically = false;

  EnumDocumentQualityAttributes (String term, boolean addStatically) {
    this.mTerm = term;
    this.mAddStatically = addStatically;
  }

  public String getType () {
    return this.mTerm;
  }

  public boolean isAddStatically () {
    return mAddStatically;
  }

  public static EnumDocumentQualityAttributes mapMistakeTypeEnum (RuleMatchTypeEnum mistakeTypeEnum) {
    switch (mistakeTypeEnum) {
    case SPELLING_MISTAKE:
      return MISSPELLINGS;
    case GRAMMAR_MISTAKE:
      return GRAMMAR;
    }
    return UNIQUE_WORD_NUMBERS;
  }
}
